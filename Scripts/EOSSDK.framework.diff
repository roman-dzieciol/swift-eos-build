diff --git a/EOSSDK.framework/Headers/eos_achievements.h b/EOSSDK.framework/Headers/eos_achievements.h
index ef1700d..ae129a1 100644
--- a/EOSSDK.framework/Headers/eos_achievements.h
+++ b/EOSSDK.framework/Headers/eos_achievements.h
@@ -1,7 +1,7 @@
 // Copyright Epic Games, Inc. All Rights Reserved.
 #pragma once
 
-#include "eos_achievements_types.h"
+#include <EOSSDK/eos_achievements_types.h>
 
 /**
  * The following EOS_Achievements_* functions allow you to query existing achievement definitions that have been defined for your application.
diff --git a/EOSSDK.framework/Headers/eos_achievements_types.h b/EOSSDK.framework/Headers/eos_achievements_types.h
index 4c50570..83767e9 100644
--- a/EOSSDK.framework/Headers/eos_achievements_types.h
+++ b/EOSSDK.framework/Headers/eos_achievements_types.h
@@ -2,7 +2,7 @@
 
 #pragma once
 
-#include "eos_common.h"
+#include <EOSSDK/eos_common.h>
 
 #pragma pack(push, 8)
 
@@ -390,4 +390,4 @@ EOS_DECLARE_CALLBACK(EOS_Achievements_OnAchievementsUnlockedCallbackV2, const EO
 
 #pragma pack(pop)
 
-#include "eos_achievements_types_deprecated.inl"
+#include <EOSSDK/eos_achievements_types_deprecated.h>
diff --git a/EOSSDK.framework/Headers/eos_achievements_types_deprecated.h b/EOSSDK.framework/Headers/eos_achievements_types_deprecated.h
new file mode 100644
index 0000000..9fb13cf
--- /dev/null
+++ b/EOSSDK.framework/Headers/eos_achievements_types_deprecated.h
@@ -0,0 +1,189 @@
+// Copyright Epic Games, Inc. All Rights Reserved.
+
+#pragma once
+
+#include <EOSSDK/eos_common.h>
+
+/*
+ * This file contains the deprecated types for EOS Achievements. In a future version, these types will be removed.
+ */
+
+#pragma pack(push, 8)
+
+ /** The most recent version of the EOS_Achievements_Definition struct. */
+#define EOS_ACHIEVEMENTS_DEFINITION_API_LATEST 1
+
+/**
+ * Contains information about a single achievement definition with localized text.
+ */
+EOS_STRUCT(EOS_Achievements_Definition, (
+	/** API Version: Set this to EOS_ACHIEVEMENTS_DEFINITION_API_LATEST. */
+	int32_t ApiVersion;
+	/** Achievement ID that can be used to uniquely identify the achievement. */
+	const char* AchievementId;
+	/** Text representing the Name to display in-game when achievement has been unlocked. */
+	const char* DisplayName;
+	/** Text representing the description to display in-game when achievement has been unlocked. */
+	const char* Description;
+	/** Text representing the name to display in-game when achievement is locked. */
+	const char* LockedDisplayName;
+	/** Text representing the description of what needs to be done to trigger the unlock of this achievement. */
+	const char* LockedDescription;
+	/** Text representing the description to display in-game when achievement is hidden. */
+	const char* HiddenDescription;
+	/** Text representing the description of what happens when the achievement is unlocked. */
+	const char* CompletionDescription;
+	/** Text representing the icon to display in-game when achievement is unlocked. */
+	const char* UnlockedIconId;
+	/** Text representing the icon to display in-game when achievement is locked. */
+	const char* LockedIconId;
+	/** True if achievement is hidden, false otherwise. */
+	EOS_Bool bIsHidden;
+	/** The number of stat thresholds. */
+	int32_t StatThresholdsCount;
+	/** Array of stat thresholds that need to be satisfied to unlock the achievement. */
+	const EOS_Achievements_StatThresholds* StatThresholds;
+));
+
+/**
+ * Release the memory associated with achievement definitions. This must be called on data retrieved from
+ * EOS_Achievements_CopyAchievementDefinitionByIndex or EOS_Achievements_CopyAchievementDefinitionByAchievementId.
+ *
+ * @param AchievementDefinition - The achievement definition to release.
+ *
+ * @see EOS_Achievements_Definition
+ * @see EOS_Achievements_CopyAchievementDefinitionByIndex
+ * @see EOS_Achievements_CopyAchievementDefinitionByAchievementId
+ */
+EOS_DECLARE_FUNC(void) EOS_Achievements_Definition_Release(EOS_Achievements_Definition* AchievementDefinition);
+
+/** The most recent version of the EOS_Achievements_CopyAchievementDefinitionByIndexOptions struct. */
+#define EOS_ACHIEVEMENTS_COPYDEFINITIONBYINDEX_API_LATEST 1
+
+/**
+ * Input parameters for the EOS_Achievements_CopyAchievementDefinitionByIndex function.
+ */
+EOS_STRUCT(EOS_Achievements_CopyAchievementDefinitionByIndexOptions, (
+	/** API Version: Set this to EOS_ACHIEVEMENTS_COPYDEFINITIONBYINDEX_API_LATEST. */
+	int32_t ApiVersion;
+	/** Index of the achievement definition to retrieve from the cache */
+	uint32_t AchievementIndex;
+));
+
+/** The most recent version of the EOS_Achievements_CopyAchievementDefinitionByAchievementIdOptions struct. */
+#define EOS_ACHIEVEMENTS_COPYDEFINITIONBYACHIEVEMENTID_API_LATEST 1
+
+/**
+ * Input parameters for the EOS_Achievements_CopyAchievementDefinitionByAchievementId function.
+ */
+EOS_STRUCT(EOS_Achievements_CopyAchievementDefinitionByAchievementIdOptions, (
+	/** API Version: Set this to EOS_ACHIEVEMENTS_COPYDEFINITIONBYACHIEVEMENTID_API_LATEST. */
+	int32_t ApiVersion;
+	/** Achievement ID to look for when copying definition from the cache */
+	const char* AchievementId;
+));
+
+/** The most recent version of the EOS_Achievements_UnlockedAchievement struct. */
+#define EOS_ACHIEVEMENTS_UNLOCKEDACHIEVEMENT_API_LATEST 1
+
+/**
+ * Contains information about a single unlocked achievement.
+ */
+EOS_STRUCT(EOS_Achievements_UnlockedAchievement, (
+	/** API Version: Set this to EOS_ACHIEVEMENTS_UNLOCKEDACHIEVEMENT_API_LATEST. */
+	int32_t ApiVersion;
+	/** Achievement ID that can be used to uniquely identify the unlocked achievement. */
+	const char* AchievementId;
+	/** If not EOS_ACHIEVEMENTS_ACHIEVEMENT_UNLOCKTIME_UNDEFINED then this is the POSIX timestamp that the achievement was unlocked. */
+	int64_t UnlockTime;
+));
+
+/** The most recent version of the EOS_Achievements_GetUnlockedAchievementCount API. */
+#define EOS_ACHIEVEMENTS_GETUNLOCKEDACHIEVEMENTCOUNT_API_LATEST 1
+
+/**
+ * Input parameters for the EOS_Achievements_GetUnlockedAchievementCount function.
+ */
+EOS_STRUCT(EOS_Achievements_GetUnlockedAchievementCountOptions, (
+	/** API Version: Set this to EOS_ACHIEVEMENTS_GETUNLOCKEDACHIEVEMENTCOUNT_API_LATEST. */
+	int32_t ApiVersion;
+	/** Product User ID for which to retrieve the unlocked achievement count */
+	EOS_ProductUserId UserId;
+));
+
+/** The most recent version of the EOS_Achievements_CopyUnlockedAchievementByIndexOptions struct. */
+#define EOS_ACHIEVEMENTS_COPYUNLOCKEDACHIEVEMENTBYINDEX_API_LATEST 1
+
+/**
+ * Input parameters for the EOS_Achievements_CopyUnlockedAchievementByIndex function.
+ */
+EOS_STRUCT(EOS_Achievements_CopyUnlockedAchievementByIndexOptions, (
+	/** API Version: Set this to EOS_ACHIEVEMENTS_COPYUNLOCKEDACHIEVEMENTBYINDEX_API_LATEST. */
+	int32_t ApiVersion;
+	/** The Product User ID for the user who is copying the unlocked achievement */
+	EOS_ProductUserId UserId;
+	/** Index of the unlocked achievement to retrieve from the cache */
+	uint32_t AchievementIndex;
+));
+
+/** The most recent version of the EOS_Achievements_CopyUnlockedAchievementByAchievementIdOptions struct. */
+#define EOS_ACHIEVEMENTS_COPYUNLOCKEDACHIEVEMENTBYACHIEVEMENTID_API_LATEST 1
+
+/**
+ * Input parameters for the EOS_Achievements_CopyUnlockedAchievementByAchievementId function.
+ */
+EOS_STRUCT(EOS_Achievements_CopyUnlockedAchievementByAchievementIdOptions, (
+	/** API Version: Set this to EOS_ACHIEVEMENTS_COPYUNLOCKEDACHIEVEMENTBYACHIEVEMENTID_API_LATEST. */
+	int32_t ApiVersion;
+	/** The Product User ID for the user who is copying the unlocked achievement */
+	EOS_ProductUserId UserId;
+	/** AchievementId of the unlocked achievement to retrieve from the cache */
+	const char* AchievementId;
+));
+
+
+/** The most recent version of the EOS_Achievements_AddNotifyAchievementsUnlocked API. */
+#define EOS_ACHIEVEMENTS_ADDNOTIFYACHIEVEMENTSUNLOCKED_API_LATEST 1
+
+/**
+ * Input parameters for the EOS_Achievements_AddNotifyAchievementsUnlocked function.
+ */
+EOS_STRUCT(EOS_Achievements_AddNotifyAchievementsUnlockedOptions, (
+	/** API Version: Set this to EOS_ACHIEVEMENTS_ADDNOTIFYACHIEVEMENTSUNLOCKED_API_LATEST. */
+	int32_t ApiVersion;
+));
+
+/**
+ * Output parameters for the EOS_Achievements_OnAchievementsUnlockedCallback Function.
+ */
+EOS_STRUCT(EOS_Achievements_OnAchievementsUnlockedCallbackInfo, (
+	/** Context that was passed into EOS_Achievements_AddNotifyAchievementsUnlocked */
+	void* ClientData;
+	/** The Product User ID for the user who received the unlocked achievements notification */
+	EOS_ProductUserId UserId;
+	/** The number of achievements. */
+	uint32_t AchievementsCount;
+	/** This member is not used and will always be set to NULL. */
+	const char** AchievementIds;
+));
+
+/**
+ * Function prototype definition for notifications that come from EOS_Achievements_AddNotifyAchievementsUnlocked
+ *
+ * @param Data A EOS_Achievements_OnAchievementsUnlockedCallbackInfo containing the output information and result
+ */
+EOS_DECLARE_CALLBACK(EOS_Achievements_OnAchievementsUnlockedCallback, const EOS_Achievements_OnAchievementsUnlockedCallbackInfo* Data);
+
+/**
+ * Release the memory associated with an unlocked achievement. This must be called on data retrieved from
+ * EOS_Achievements_CopyUnlockedAchievementByIndex or EOS_Achievements_CopyUnlockedAchievementByAchievementId.
+ *
+ * @param Achievement - The unlocked achievement data to release.
+ *
+ * @see EOS_Achievements_UnlockedAchievement
+ * @see EOS_Achievements_CopyUnlockedAchievementByIndex
+ * @see EOS_Achievements_CopyUnlockedAchievementByAchievementId
+ */
+EOS_DECLARE_FUNC(void) EOS_Achievements_UnlockedAchievement_Release(EOS_Achievements_UnlockedAchievement* Achievement);
+
+#pragma pack(pop)
diff --git a/EOSSDK.framework/Headers/eos_all_ios.h b/EOSSDK.framework/Headers/eos_all_ios.h
new file mode 100644
index 0000000..ac4c2a8
--- /dev/null
+++ b/EOSSDK.framework/Headers/eos_all_ios.h
@@ -0,0 +1,28 @@
+
+#pragma once
+
+#include <EOSSDK/eos_sdk.h>
+#include <EOSSDK/eos_achievements.h>
+#include <EOSSDK/eos_anticheatclient.h>
+#include <EOSSDK/eos_anticheatserver.h>
+#include <EOSSDK/eos_auth.h>
+#include <EOSSDK/eos_connect.h>
+#include <EOSSDK/eos_ecom.h>
+#include <EOSSDK/eos_friends.h>
+#include <EOSSDK/eos_ios.h>
+#include <EOSSDK/eos_kws.h>
+#include <EOSSDK/eos_leaderboards.h>
+#include <EOSSDK/eos_lobby.h>
+#include <EOSSDK/eos_logging.h>
+#include <EOSSDK/eos_metrics.h>
+#include <EOSSDK/eos_mods.h>
+#include <EOSSDK/eos_p2p.h>
+#include <EOSSDK/eos_playerdatastorage.h>
+#include <EOSSDK/eos_presence.h>
+#include <EOSSDK/eos_reports.h>
+#include <EOSSDK/eos_sanctions.h>
+#include <EOSSDK/eos_sessions.h>
+#include <EOSSDK/eos_stats.h>
+#include <EOSSDK/eos_titlestorage.h>
+#include <EOSSDK/eos_ui.h>
+#include <EOSSDK/eos_userinfo.h>
diff --git a/EOSSDK.framework/Headers/eos_anticheatclient.h b/EOSSDK.framework/Headers/eos_anticheatclient.h
index bbaecf1..3d954cc 100644
--- a/EOSSDK.framework/Headers/eos_anticheatclient.h
+++ b/EOSSDK.framework/Headers/eos_anticheatclient.h
@@ -1,7 +1,7 @@
 // Copyright Epic Games, Inc. All Rights Reserved.
 #pragma once
 
-#include "eos_anticheatclient_types.h"
+#include <EOSSDK/eos_anticheatclient_types.h>
 
 /**
  * Add a callback issued when a new message must be dispatched to the game server. The bound function will only be called
diff --git a/EOSSDK.framework/Headers/eos_anticheatclient_types.h b/EOSSDK.framework/Headers/eos_anticheatclient_types.h
index b503047..87860ce 100644
--- a/EOSSDK.framework/Headers/eos_anticheatclient_types.h
+++ b/EOSSDK.framework/Headers/eos_anticheatclient_types.h
@@ -2,8 +2,8 @@
 
 #pragma once
 
-#include "eos_common.h"
-#include "eos_anticheatcommon_types.h"
+#include <EOSSDK/eos_common.h>
+#include <EOSSDK/eos_anticheatcommon_types.h>
 
 #pragma pack(push, 8)
 
diff --git a/EOSSDK.framework/Headers/eos_anticheatcommon_types.h b/EOSSDK.framework/Headers/eos_anticheatcommon_types.h
index 4db36e9..cf86ecf 100644
--- a/EOSSDK.framework/Headers/eos_anticheatcommon_types.h
+++ b/EOSSDK.framework/Headers/eos_anticheatcommon_types.h
@@ -2,7 +2,7 @@
 
 #pragma once
 
-#include "eos_common.h"
+#include <EOSSDK/eos_common.h>
 
 #pragma pack(push, 8)
 
@@ -321,7 +321,7 @@ EOS_STRUCT(EOS_AntiCheatCommon_LogEventParamPair, (
 	union
 	{
 		EOS_AntiCheatCommon_ClientHandle ClientHandle;
-		const char* String; // Will be truncated if longer than EOS_ANTICHEATCOMMON_LOGEVENT_STRING_MAX_LENGTH bytes.
+		const char* String; /** Will be truncated if longer than EOS_ANTICHEATCOMMON_LOGEVENT_STRING_MAX_LENGTH bytes. */
 		uint32_t UInt32;
 		int32_t Int32;
 		uint64_t UInt64;
diff --git a/EOSSDK.framework/Headers/eos_anticheatserver.h b/EOSSDK.framework/Headers/eos_anticheatserver.h
index ff5ec40..cf7cc5f 100644
--- a/EOSSDK.framework/Headers/eos_anticheatserver.h
+++ b/EOSSDK.framework/Headers/eos_anticheatserver.h
@@ -1,7 +1,7 @@
 // Copyright Epic Games, Inc. All Rights Reserved.
 #pragma once
 
-#include "eos_anticheatserver_types.h"
+#include <EOSSDK/eos_anticheatserver_types.h>
 
 /**
  * Add a callback issued when a new message must be dispatched to a connected client. The bound function
diff --git a/EOSSDK.framework/Headers/eos_anticheatserver_types.h b/EOSSDK.framework/Headers/eos_anticheatserver_types.h
index 2e0c2d6..88d6ace 100644
--- a/EOSSDK.framework/Headers/eos_anticheatserver_types.h
+++ b/EOSSDK.framework/Headers/eos_anticheatserver_types.h
@@ -2,8 +2,8 @@
 
 #pragma once
 
-#include "eos_common.h"
-#include "eos_anticheatcommon_types.h"
+#include <EOSSDK/eos_common.h>
+#include <EOSSDK/eos_anticheatcommon_types.h>
 
 #pragma pack(push, 8)
 
diff --git a/EOSSDK.framework/Headers/eos_auth.h b/EOSSDK.framework/Headers/eos_auth.h
index 02252ee..24fc5c6 100644
--- a/EOSSDK.framework/Headers/eos_auth.h
+++ b/EOSSDK.framework/Headers/eos_auth.h
@@ -1,7 +1,7 @@
 // Copyright Epic Games, Inc. All Rights Reserved.
 #pragma once
 
-#include "eos_auth_types.h"
+#include <EOSSDK/eos_auth_types.h>
 
 /**
  * The Auth Interface is used to manage local user permissions and access to backend services through the verification of various forms of credentials.
diff --git a/EOSSDK.framework/Headers/eos_auth_types.h b/EOSSDK.framework/Headers/eos_auth_types.h
index e0f9105..e7eafcc 100644
--- a/EOSSDK.framework/Headers/eos_auth_types.h
+++ b/EOSSDK.framework/Headers/eos_auth_types.h
@@ -1,7 +1,7 @@
 // Copyright Epic Games, Inc. All Rights Reserved.
 #pragma once
 
-#include "eos_common.h"
+#include <EOSSDK/eos_common.h>
 
 #pragma pack(push, 8)
 
diff --git a/EOSSDK.framework/Headers/eos_base.h b/EOSSDK.framework/Headers/eos_base.h
index 20e9453..84fbc35 100644
--- a/EOSSDK.framework/Headers/eos_base.h
+++ b/EOSSDK.framework/Headers/eos_base.h
@@ -56,7 +56,6 @@ Please refer to https://dev.epicgames.com/docs/services or `eos_platform_prereqs
 	#include <stddef.h>
 #endif
 
-
 typedef int32_t EOS_Bool;
 #define EOS_TRUE 1
 #define EOS_FALSE 0
diff --git a/EOSSDK.framework/Headers/eos_common.h b/EOSSDK.framework/Headers/eos_common.h
index 630b039..46a56ed 100644
--- a/EOSSDK.framework/Headers/eos_common.h
+++ b/EOSSDK.framework/Headers/eos_common.h
@@ -2,7 +2,7 @@
 
 #pragma once
 
-#include "eos_base.h"
+#include <EOSSDK/eos_base.h>
 
 #pragma pack(push, 8)
 
@@ -12,7 +12,7 @@
 #define EOS_RESULT_VALUE_LAST(Name, Value) Name = Value
 
 EOS_ENUM_START(EOS_EResult)
-#include "eos_result.h"
+#include <EOSSDK/eos_result.h>
 EOS_ENUM_END(EOS_EResult);
 
 #undef EOS_RESULT_VALUE
diff --git a/EOSSDK.framework/Headers/eos_connect.h b/EOSSDK.framework/Headers/eos_connect.h
index 0173a3f..06d68ae 100644
--- a/EOSSDK.framework/Headers/eos_connect.h
+++ b/EOSSDK.framework/Headers/eos_connect.h
@@ -1,7 +1,7 @@
 // Copyright Epic Games, Inc. All Rights Reserved.
 #pragma once
 
-#include "eos_connect_types.h"
+#include <EOSSDK/eos_connect_types.h>
 
 /**
  * The Connect Interface is used to manage local user permissions and access to backend services through the verification of various forms of credentials.
diff --git a/EOSSDK.framework/Headers/eos_connect_types.h b/EOSSDK.framework/Headers/eos_connect_types.h
index 87b540c..8f0eef2 100644
--- a/EOSSDK.framework/Headers/eos_connect_types.h
+++ b/EOSSDK.framework/Headers/eos_connect_types.h
@@ -1,7 +1,7 @@
 // Copyright Epic Games, Inc. All Rights Reserved.
 #pragma once
 
-#include "eos_common.h"
+#include <EOSSDK/eos_common.h>
 
 #pragma pack(push, 8)
 
diff --git a/EOSSDK.framework/Headers/eos_ecom.h b/EOSSDK.framework/Headers/eos_ecom.h
index 9fa91bb..8fab20f 100644
--- a/EOSSDK.framework/Headers/eos_ecom.h
+++ b/EOSSDK.framework/Headers/eos_ecom.h
@@ -1,7 +1,7 @@
 // Copyright Epic Games, Inc. All Rights Reserved.
 #pragma once
 
-#include "eos_ecom_types.h"
+#include <EOSSDK/eos_ecom_types.h>
 
 /**
  * The Ecom Interface exposes all catalog, purchasing, and ownership entitlement features available with the Epic Games store
diff --git a/EOSSDK.framework/Headers/eos_ecom_types.h b/EOSSDK.framework/Headers/eos_ecom_types.h
index 9295f14..d1c5653 100644
--- a/EOSSDK.framework/Headers/eos_ecom_types.h
+++ b/EOSSDK.framework/Headers/eos_ecom_types.h
@@ -2,7 +2,7 @@
 
 #pragma once
 
-#include "eos_common.h"
+#include <EOSSDK/eos_common.h>
 
 #pragma pack(push, 8)
 
diff --git a/EOSSDK.framework/Headers/eos_friends.h b/EOSSDK.framework/Headers/eos_friends.h
index cf65670..76a5009 100644
--- a/EOSSDK.framework/Headers/eos_friends.h
+++ b/EOSSDK.framework/Headers/eos_friends.h
@@ -1,7 +1,7 @@
 // Copyright Epic Games, Inc. All Rights Reserved.
 #pragma once
 
-#include "eos_friends_types.h"
+#include <EOSSDK/eos_friends_types.h>
 
 /**
  * The Friends Interface is used to manage a user's friends list, by interacting with the backend services, and to retrieve the cached list of friends and pending invitations.
diff --git a/EOSSDK.framework/Headers/eos_friends_types.h b/EOSSDK.framework/Headers/eos_friends_types.h
index cfd016b..cf9ad8b 100644
--- a/EOSSDK.framework/Headers/eos_friends_types.h
+++ b/EOSSDK.framework/Headers/eos_friends_types.h
@@ -1,7 +1,7 @@
 // Copyright Epic Games, Inc. All Rights Reserved.
 #pragma once
 
-#include "eos_common.h"
+#include <EOSSDK/eos_common.h>
 
 #pragma pack(push, 8)
 
diff --git a/EOSSDK.framework/Headers/eos_init.h b/EOSSDK.framework/Headers/eos_init.h
index 22d5cf5..e87ef31 100644
--- a/EOSSDK.framework/Headers/eos_init.h
+++ b/EOSSDK.framework/Headers/eos_init.h
@@ -1,7 +1,7 @@
 // Copyright Epic Games, Inc. All Rights Reserved.
 #pragma once
 
-#include "eos_types.h"
+#include <EOSSDK/eos_types.h>
 
 #pragma pack(push, 8)
 
diff --git a/EOSSDK.framework/Headers/eos_ios.h b/EOSSDK.framework/Headers/eos_ios.h
index c5c03b7..00eb1d6 100644
--- a/EOSSDK.framework/Headers/eos_ios.h
+++ b/EOSSDK.framework/Headers/eos_ios.h
@@ -1,7 +1,7 @@
 // Copyright Epic Games, Inc. All Rights Reserved.
 #pragma once
 
-#include "eos_types.h"
+#include <EOSSDK/eos_types.h>
 
 #pragma pack(push, 8)
 
diff --git a/EOSSDK.framework/Headers/eos_kws.h b/EOSSDK.framework/Headers/eos_kws.h
index f314580..9a3a6a0 100644
--- a/EOSSDK.framework/Headers/eos_kws.h
+++ b/EOSSDK.framework/Headers/eos_kws.h
@@ -1,7 +1,7 @@
 // Copyright Epic Games, Inc. All Rights Reserved.
 #pragma once
 
-#include "eos_kws_types.h"
+#include <EOSSDK/eos_kws_types.h>
 
 /**
  * This interface is not available for general access at this time.
diff --git a/EOSSDK.framework/Headers/eos_kws_types.h b/EOSSDK.framework/Headers/eos_kws_types.h
index 6f3e25f..792ec35 100644
--- a/EOSSDK.framework/Headers/eos_kws_types.h
+++ b/EOSSDK.framework/Headers/eos_kws_types.h
@@ -1,7 +1,7 @@
 // Copyright Epic Games, Inc. All Rights Reserved.
 #pragma once
 
-#include "eos_common.h"
+#include <EOSSDK/eos_common.h>
 
 #pragma pack(push, 8)
 
diff --git a/EOSSDK.framework/Headers/eos_leaderboards.h b/EOSSDK.framework/Headers/eos_leaderboards.h
index 9fec836..f579a41 100644
--- a/EOSSDK.framework/Headers/eos_leaderboards.h
+++ b/EOSSDK.framework/Headers/eos_leaderboards.h
@@ -1,7 +1,7 @@
 // Copyright Epic Games, Inc. All Rights Reserved.
 #pragma once
 
-#include "eos_leaderboards_types.h"
+#include <EOSSDK/eos_leaderboards_types.h>
 
 /**
  * The following EOS_Leaderboards_* functions allow you to query existing leaderboard definitions that have been defined for your application.
diff --git a/EOSSDK.framework/Headers/eos_leaderboards_types.h b/EOSSDK.framework/Headers/eos_leaderboards_types.h
index 7fda294..af1b087 100644
--- a/EOSSDK.framework/Headers/eos_leaderboards_types.h
+++ b/EOSSDK.framework/Headers/eos_leaderboards_types.h
@@ -2,7 +2,7 @@
 
 #pragma once
 
-#include "eos_common.h"
+#include <EOSSDK/eos_common.h>
 
 #pragma pack(push, 8)
 
@@ -373,4 +373,4 @@ EOS_DECLARE_CALLBACK(EOS_Leaderboards_OnQueryLeaderboardRanksCompleteCallback, c
 
 #pragma pack(pop)
 
-#include "eos_leaderboards_types_deprecated.inl"
\ No newline at end of file
+#include <EOSSDK/eos_leaderboards_types_deprecated.h>
diff --git a/EOSSDK.framework/Headers/eos_leaderboards_types_deprecated.h b/EOSSDK.framework/Headers/eos_leaderboards_types_deprecated.h
new file mode 100644
index 0000000..f61e7c4
--- /dev/null
+++ b/EOSSDK.framework/Headers/eos_leaderboards_types_deprecated.h
@@ -0,0 +1,16 @@
+// Copyright Epic Games, Inc. All Rights Reserved.
+
+#pragma once
+
+#include <EOSSDK/eos_common.h>
+
+/*
+ * This file contains the deprecated types for EOS Leaderboards. In a future version, these types will be removed.
+ */
+
+#pragma pack(push, 8)
+
+/* Do not use. Alias to the previous API name for backwards compatibility in compilation. */
+EOS_DECLARE_FUNC(void) EOS_Leaderboards_LeaderboardDefinition_Release(EOS_Leaderboards_Definition* LeaderboardDefinition);
+
+#pragma pack(pop)
diff --git a/EOSSDK.framework/Headers/eos_lobby.h b/EOSSDK.framework/Headers/eos_lobby.h
index e50e2b3..8d4eb40 100644
--- a/EOSSDK.framework/Headers/eos_lobby.h
+++ b/EOSSDK.framework/Headers/eos_lobby.h
@@ -1,7 +1,7 @@
 // Copyright Epic Games, Inc. All Rights Reserved.
 #pragma once
 
-#include "eos_lobby_types.h"
+#include <EOSSDK/eos_lobby_types.h>
 
 /**
  * The Lobby Interface is used to manage lobbies that provide a persistent connection between users and 
@@ -457,7 +457,7 @@ EOS_DECLARE_FUNC(EOS_EResult) EOS_LobbyModification_AddMemberAttribute(EOS_HLobb
  */
 EOS_DECLARE_FUNC(EOS_EResult) EOS_LobbyModification_RemoveMemberAttribute(EOS_HLobbyModification Handle, const EOS_LobbyModification_RemoveMemberAttributeOptions* Options);
 
-#include "eos_lobby_types.h"
+#include <EOSSDK/eos_lobby_types.h>
 
 /**
  * A "read only" representation of an existing lobby that games interact with externally.
@@ -600,7 +600,7 @@ EOS_DECLARE_FUNC(EOS_EResult) EOS_LobbyDetails_CopyMemberAttributeByIndex(EOS_HL
  */
 EOS_DECLARE_FUNC(EOS_EResult) EOS_LobbyDetails_CopyMemberAttributeByKey(EOS_HLobbyDetails Handle, const EOS_LobbyDetails_CopyMemberAttributeByKeyOptions* Options, EOS_Lobby_Attribute ** OutAttribute);
 
-#include "eos_lobby_types.h"
+#include <EOSSDK/eos_lobby_types.h>
 
 /**
  * Class responsible for the creation, setup, and execution of a search query.
diff --git a/EOSSDK.framework/Headers/eos_lobby_types.h b/EOSSDK.framework/Headers/eos_lobby_types.h
index fc772a7..0c52dad 100644
--- a/EOSSDK.framework/Headers/eos_lobby_types.h
+++ b/EOSSDK.framework/Headers/eos_lobby_types.h
@@ -1,8 +1,8 @@
 // Copyright Epic Games, Inc. All Rights Reserved.
 #pragma once
 
-#include "eos_common.h"
-#include "eos_ui_types.h"
+#include <EOSSDK/eos_common.h>
+#include <EOSSDK/eos_ui_types.h>
 
 #pragma pack(push, 8)
 
diff --git a/EOSSDK.framework/Headers/eos_logging.h b/EOSSDK.framework/Headers/eos_logging.h
index 05aafba..3422b49 100644
--- a/EOSSDK.framework/Headers/eos_logging.h
+++ b/EOSSDK.framework/Headers/eos_logging.h
@@ -1,7 +1,7 @@
 // Copyright Epic Games, Inc. All Rights Reserved.
 #pragma once
 
-#include "eos_common.h"
+#include <EOSSDK/eos_common.h>
 
 /**
  * The Logging Interface grants access to log output coming from the SDK at various levels of detail.
diff --git a/EOSSDK.framework/Headers/eos_metrics.h b/EOSSDK.framework/Headers/eos_metrics.h
index d29e5cd..9c86e21 100644
--- a/EOSSDK.framework/Headers/eos_metrics.h
+++ b/EOSSDK.framework/Headers/eos_metrics.h
@@ -1,7 +1,7 @@
 // Copyright Epic Games, Inc. All Rights Reserved.
 #pragma once
 
-#include "eos_metrics_types.h"
+#include <EOSSDK/eos_metrics_types.h>
 
 /**
  * The Metrics Interface tracks your application's usage and populates the Game Analytics dashboard in the Developer Portal.
diff --git a/EOSSDK.framework/Headers/eos_metrics_types.h b/EOSSDK.framework/Headers/eos_metrics_types.h
index 22c8b2e..e036907 100644
--- a/EOSSDK.framework/Headers/eos_metrics_types.h
+++ b/EOSSDK.framework/Headers/eos_metrics_types.h
@@ -2,7 +2,7 @@
 
 #pragma once
 
-#include "eos_common.h"
+#include <EOSSDK/eos_common.h>
 
 #pragma pack(push, 8)
 
diff --git a/EOSSDK.framework/Headers/eos_mods.h b/EOSSDK.framework/Headers/eos_mods.h
index d14408a..8941370 100644
--- a/EOSSDK.framework/Headers/eos_mods.h
+++ b/EOSSDK.framework/Headers/eos_mods.h
@@ -1,7 +1,7 @@
 // Copyright Epic Games, Inc. All Rights Reserved.
 #pragma once
 
-#include "eos_mods_types.h"
+#include <EOSSDK/eos_mods_types.h>
 
 /**
  * The Mods Interface is used to manage a user's mods. Allowing a user to install/uninstall/enumerate mods.
diff --git a/EOSSDK.framework/Headers/eos_mods_types.h b/EOSSDK.framework/Headers/eos_mods_types.h
index 68da334..e7d4067 100644
--- a/EOSSDK.framework/Headers/eos_mods_types.h
+++ b/EOSSDK.framework/Headers/eos_mods_types.h
@@ -1,7 +1,7 @@
 // Copyright Epic Games, Inc. All Rights Reserved.
 #pragma once
 
-#include "eos_common.h"
+#include <EOSSDK/eos_common.h>
 
 #pragma pack(push, 8)
 
diff --git a/EOSSDK.framework/Headers/eos_p2p.h b/EOSSDK.framework/Headers/eos_p2p.h
index 2ea3708..7e2a77a 100644
--- a/EOSSDK.framework/Headers/eos_p2p.h
+++ b/EOSSDK.framework/Headers/eos_p2p.h
@@ -1,7 +1,7 @@
 // Copyright Epic Games, Inc. All Rights Reserved.
 #pragma once
 
-#include "eos_p2p_types.h"
+#include <EOSSDK/eos_p2p_types.h>
 
 /**
  * P2P functions to help manage sending and receiving of messages to peers.
diff --git a/EOSSDK.framework/Headers/eos_p2p_types.h b/EOSSDK.framework/Headers/eos_p2p_types.h
index 0cd87b1..d56c4fd 100644
--- a/EOSSDK.framework/Headers/eos_p2p_types.h
+++ b/EOSSDK.framework/Headers/eos_p2p_types.h
@@ -2,7 +2,7 @@
 
 #pragma once
 
-#include "eos_common.h"
+#include <EOSSDK/eos_common.h>
 
 #pragma pack(push, 8)
 
diff --git a/EOSSDK.framework/Headers/eos_platform_prereqs.h b/EOSSDK.framework/Headers/eos_platform_prereqs.h
index be069d1..25763e3 100644
--- a/EOSSDK.framework/Headers/eos_platform_prereqs.h
+++ b/EOSSDK.framework/Headers/eos_platform_prereqs.h
@@ -21,20 +21,20 @@
  * Alternatives to this header are to have the necessary file explicitly
  * included.  This is a good solution if only a single platform is needed.
  * For example:
- *   #include "ThePlatform/eos_ThePlatform_base.h"
- *   #include "eos_sdk.h"
- *   #include "eos_friends_types.h"
+ *   #include <EOSSDK/ThePlatform/eos_ThePlatform_base.h>
+ *   #include <EOSSDK/eos_sdk.h>
+ *   #include <EOSSDK/eos_friends_types.h>
  *
  * Another option is to use the macros provided by the custom compiler to
  * determine which include to use.
  * For example:
  *   #if defined(__THECOMPILER__)
- *   #include "ThePlatform/eos_ThePlatform_base.h"
+ *   #include <EOSSDK/ThePlatform/eos_ThePlatform_base.h>
  *   #elif defined(__SOMECOMPILER__)
- *   #include "SomePlatform/eos_SomePlatform_base.h"
+ *   #include <EOSSDK/SomePlatform/eos_SomePlatform_base.h>
  *   #endif
- *   #include "eos_sdk.h"
- *   #include "eos_friends_types.h"
+ *   #include <EOSSDK/eos_sdk.h>
+ *   #include <EOSSDK/eos_friends_types.h>
  *
  ******************************************************************************/
 
diff --git a/EOSSDK.framework/Headers/eos_playerdatastorage.h b/EOSSDK.framework/Headers/eos_playerdatastorage.h
index bfc0fad..38337ed 100644
--- a/EOSSDK.framework/Headers/eos_playerdatastorage.h
+++ b/EOSSDK.framework/Headers/eos_playerdatastorage.h
@@ -1,7 +1,7 @@
 // Copyright Epic Games, Inc. All Rights Reserved.
 #pragma once
 
-#include "eos_playerdatastorage_types.h"
+#include <EOSSDK/eos_playerdatastorage_types.h>
 
 /**
  * The following EOS_PlayerDataStorage_* functions allow you to query file metadata; create/upload files; and duplicate, read, and delete existing files
diff --git a/EOSSDK.framework/Headers/eos_playerdatastorage_types.h b/EOSSDK.framework/Headers/eos_playerdatastorage_types.h
index e1d42b2..be01d37 100644
--- a/EOSSDK.framework/Headers/eos_playerdatastorage_types.h
+++ b/EOSSDK.framework/Headers/eos_playerdatastorage_types.h
@@ -2,7 +2,7 @@
 
 #pragma once
 
-#include "eos_common.h"
+#include <EOSSDK/eos_common.h>
 
 #pragma pack(push, 8)
 
diff --git a/EOSSDK.framework/Headers/eos_presence.h b/EOSSDK.framework/Headers/eos_presence.h
index 7994a08..6250801 100644
--- a/EOSSDK.framework/Headers/eos_presence.h
+++ b/EOSSDK.framework/Headers/eos_presence.h
@@ -1,7 +1,7 @@
 // Copyright Epic Games, Inc. All Rights Reserved.
 #pragma once
 
-#include "eos_presence_types.h"
+#include <EOSSDK/eos_presence_types.h>
 
 /**
  * The Presence methods enable you to query and read other player's presence information, or modify your own.
diff --git a/EOSSDK.framework/Headers/eos_presence_types.h b/EOSSDK.framework/Headers/eos_presence_types.h
index 6116f21..232e8c0 100644
--- a/EOSSDK.framework/Headers/eos_presence_types.h
+++ b/EOSSDK.framework/Headers/eos_presence_types.h
@@ -2,8 +2,8 @@
 
 #pragma once
 
-#include "eos_common.h"
-#include "eos_ui_types.h"
+#include <EOSSDK/eos_common.h>
+#include <EOSSDK/eos_ui_types.h>
 
 #pragma pack(push, 8)
 
diff --git a/EOSSDK.framework/Headers/eos_reports.h b/EOSSDK.framework/Headers/eos_reports.h
index 9cee8a6..83805cc 100644
--- a/EOSSDK.framework/Headers/eos_reports.h
+++ b/EOSSDK.framework/Headers/eos_reports.h
@@ -1,7 +1,7 @@
 // Copyright Epic Games, Inc. All Rights Reserved.
 #pragma once
 
-#include "eos_reports_types.h"
+#include <EOSSDK/eos_reports_types.h>
 
 /**
  * The following EOS_Reports_* functions allow you to send reports directly from the players
diff --git a/EOSSDK.framework/Headers/eos_reports_types.h b/EOSSDK.framework/Headers/eos_reports_types.h
index f82c9ce..83f11a0 100644
--- a/EOSSDK.framework/Headers/eos_reports_types.h
+++ b/EOSSDK.framework/Headers/eos_reports_types.h
@@ -1,7 +1,7 @@
 // Copyright Epic Games, Inc. All Rights Reserved.
 #pragma once
 
-#include "eos_common.h"
+#include <EOSSDK/eos_common.h>
 
 #pragma pack(push, 8)
 
diff --git a/EOSSDK.framework/Headers/eos_sanctions.h b/EOSSDK.framework/Headers/eos_sanctions.h
index eb58d8f..c680d81 100644
--- a/EOSSDK.framework/Headers/eos_sanctions.h
+++ b/EOSSDK.framework/Headers/eos_sanctions.h
@@ -1,7 +1,7 @@
 // Copyright Epic Games, Inc. All Rights Reserved.
 #pragma once
 
-#include "eos_sanctions_types.h"
+#include <EOSSDK/eos_sanctions_types.h>
 
 /**
  * Start an asynchronous query to retrieve any active sanctions for a specified user.
diff --git a/EOSSDK.framework/Headers/eos_sanctions_types.h b/EOSSDK.framework/Headers/eos_sanctions_types.h
index 6a2e2cf..f7df604 100644
--- a/EOSSDK.framework/Headers/eos_sanctions_types.h
+++ b/EOSSDK.framework/Headers/eos_sanctions_types.h
@@ -1,7 +1,7 @@
 // Copyright Epic Games, Inc. All Rights Reserved.
 #pragma once
 
-#include "eos_common.h"
+#include <EOSSDK/eos_common.h>
 
 #pragma pack(push, 8)
 
diff --git a/EOSSDK.framework/Headers/eos_sdk.h b/EOSSDK.framework/Headers/eos_sdk.h
index 8545698..e377884 100644
--- a/EOSSDK.framework/Headers/eos_sdk.h
+++ b/EOSSDK.framework/Headers/eos_sdk.h
@@ -1,33 +1,33 @@
 // Copyright Epic Games, Inc. All Rights Reserved.
 #pragma once
 
-#include "eos_init.h"
-#include "eos_metrics_types.h"
-#include "eos_auth_types.h"
-#include "eos_ecom_types.h"
-#include "eos_ui_types.h"
-#include "eos_friends_types.h"
-#include "eos_presence_types.h"
-#include "eos_p2p_types.h"
-#include "eos_sessions_types.h"
-#include "eos_lobby_types.h"
-#include "eos_userinfo_types.h"
-#include "eos_playerdatastorage_types.h"
-#include "eos_titlestorage_types.h"
-#include "eos_connect.h"
-#include "eos_achievements_types.h"
-#include "eos_stats_types.h"
-#include "eos_leaderboards_types.h"
-#include "eos_mods_types.h"
-#include "eos_anticheatclient_types.h"
-#include "eos_anticheatserver_types.h"
-#include "eos_reports_types.h"
-#include "eos_sanctions_types.h"
-#include "eos_kws_types.h"
+#include <EOSSDK/eos_init.h>
+#include <EOSSDK/eos_metrics_types.h>
+#include <EOSSDK/eos_auth_types.h>
+#include <EOSSDK/eos_ecom_types.h>
+#include <EOSSDK/eos_ui_types.h>
+#include <EOSSDK/eos_friends_types.h>
+#include <EOSSDK/eos_presence_types.h>
+#include <EOSSDK/eos_p2p_types.h>
+#include <EOSSDK/eos_sessions_types.h>
+#include <EOSSDK/eos_lobby_types.h>
+#include <EOSSDK/eos_userinfo_types.h>
+#include <EOSSDK/eos_playerdatastorage_types.h>
+#include <EOSSDK/eos_titlestorage_types.h>
+#include <EOSSDK/eos_connect.h>
+#include <EOSSDK/eos_achievements_types.h>
+#include <EOSSDK/eos_stats_types.h>
+#include <EOSSDK/eos_leaderboards_types.h>
+#include <EOSSDK/eos_mods_types.h>
+#include <EOSSDK/eos_anticheatclient_types.h>
+#include <EOSSDK/eos_anticheatserver_types.h>
+#include <EOSSDK/eos_reports_types.h>
+#include <EOSSDK/eos_sanctions_types.h>
+#include <EOSSDK/eos_kws_types.h>
 
 #if defined(EOS_ENABLE_PRERELEASE_APIS) && EOS_ENABLE_PRERELEASE_APIS // PREPUBLISH:REMOVEBLOCK_START
-#include "eos_rtc_types.h"
-#include "eos_rtc_admin_types.h"
+#include <EOSSDK/eos_rtc_types.h>
+#include <EOSSDK/eos_rtc_admin_types.h>
 #endif // PREPUBLISH:REMOVEBLOCK_END
 
 /**
diff --git a/EOSSDK.framework/Headers/eos_sessions.h b/EOSSDK.framework/Headers/eos_sessions.h
index b07ff73..e4711bd 100644
--- a/EOSSDK.framework/Headers/eos_sessions.h
+++ b/EOSSDK.framework/Headers/eos_sessions.h
@@ -1,7 +1,7 @@
 // Copyright Epic Games, Inc. All Rights Reserved.
 #pragma once
 
-#include "eos_sessions_types.h"
+#include <EOSSDK/eos_sessions_types.h>
 
 /**
  * The Session Interface is used to manage sessions that can be advertised with the backend service
diff --git a/EOSSDK.framework/Headers/eos_sessions_types.h b/EOSSDK.framework/Headers/eos_sessions_types.h
index 117d3ea..c73bea7 100644
--- a/EOSSDK.framework/Headers/eos_sessions_types.h
+++ b/EOSSDK.framework/Headers/eos_sessions_types.h
@@ -2,8 +2,8 @@
 
 #pragma once
 
-#include "eos_common.h"
-#include "eos_ui_types.h"
+#include <EOSSDK/eos_common.h>
+#include <EOSSDK/eos_ui_types.h>
 
 #pragma pack(push, 8)
 
diff --git a/EOSSDK.framework/Headers/eos_stats.h b/EOSSDK.framework/Headers/eos_stats.h
index cb17919..3856363 100644
--- a/EOSSDK.framework/Headers/eos_stats.h
+++ b/EOSSDK.framework/Headers/eos_stats.h
@@ -1,7 +1,7 @@
 // Copyright Epic Games, Inc. All Rights Reserved.
 #pragma once
 
-#include "eos_stats_types.h"
+#include <EOSSDK/eos_stats_types.h>
 
 /**
  * The Stats Interface manages user stats like number of items collected, fastest completion time for a level, number of wins/losses, number of times that a user has performed a certain action, and so on.
diff --git a/EOSSDK.framework/Headers/eos_stats_types.h b/EOSSDK.framework/Headers/eos_stats_types.h
index e0a22a0..6f912e8 100644
--- a/EOSSDK.framework/Headers/eos_stats_types.h
+++ b/EOSSDK.framework/Headers/eos_stats_types.h
@@ -2,7 +2,7 @@
 
 #pragma once
 
-#include "eos_common.h"
+#include <EOSSDK/eos_common.h>
 
 #pragma pack(push, 8)
 
diff --git a/EOSSDK.framework/Headers/eos_titlestorage.h b/EOSSDK.framework/Headers/eos_titlestorage.h
index 9784981..da601ab 100644
--- a/EOSSDK.framework/Headers/eos_titlestorage.h
+++ b/EOSSDK.framework/Headers/eos_titlestorage.h
@@ -1,7 +1,7 @@
 // Copyright Epic Games, Inc. All Rights Reserved.
 #pragma once
 
-#include "eos_titlestorage_types.h"
+#include <EOSSDK/eos_titlestorage_types.h>
 
 /**
  * The following EOS_TitleStorage_* functions allow you to query metadata for available files from title storage as well as download and read their contents.
diff --git a/EOSSDK.framework/Headers/eos_titlestorage_types.h b/EOSSDK.framework/Headers/eos_titlestorage_types.h
index f172758..98fc2ac 100644
--- a/EOSSDK.framework/Headers/eos_titlestorage_types.h
+++ b/EOSSDK.framework/Headers/eos_titlestorage_types.h
@@ -2,7 +2,7 @@
 
 #pragma once
 
-#include "eos_common.h"
+#include <EOSSDK/eos_common.h>
 
 #pragma pack(push, 8)
 
diff --git a/EOSSDK.framework/Headers/eos_types.h b/EOSSDK.framework/Headers/eos_types.h
index 5ee454b..587e5dd 100644
--- a/EOSSDK.framework/Headers/eos_types.h
+++ b/EOSSDK.framework/Headers/eos_types.h
@@ -1,7 +1,7 @@
 // Copyright Epic Games, Inc. All Rights Reserved.
 #pragma once
 
-#include "eos_common.h"
+#include <EOSSDK/eos_common.h>
 
 #pragma pack(push, 8)
 
@@ -58,7 +58,7 @@ EOS_STRUCT(EOS_Platform_RTCOptions, (
 #define EOS_PF_WINDOWS_ENABLE_OVERLAY_OPENGL	0x00040
 
 #if defined(EOS_ENABLE_PRERELEASE_APIS) && EOS_ENABLE_PRERELEASE_APIS // PREPUBLISH:REMOVEBLOCK_START
-#include "NotForDistribution/eos_platformoptions_internal.h"
+#include <EOSSDK/NotForDistribution/eos_platformoptions_internal.h>
 #else // PREPUBLISH:REMOVEBLOCK_END
 /** Platform options for EOS_Platform_Create. */
 EOS_STRUCT(EOS_Platform_Options, (
diff --git a/EOSSDK.framework/Headers/eos_ui.h b/EOSSDK.framework/Headers/eos_ui.h
index 1dc60db..c766ae1 100644
--- a/EOSSDK.framework/Headers/eos_ui.h
+++ b/EOSSDK.framework/Headers/eos_ui.h
@@ -1,7 +1,7 @@
 // Copyright Epic Games, Inc. All Rights Reserved.
 #pragma once
 
-#include "eos_ui_types.h"
+#include <EOSSDK/eos_ui_types.h>
 
 /**
  * The UI Interface is used to access the Social Overlay UI.  Each UI component will have a function for
diff --git a/EOSSDK.framework/Headers/eos_ui_types.h b/EOSSDK.framework/Headers/eos_ui_types.h
index 83ef1e7..f03f31a 100644
--- a/EOSSDK.framework/Headers/eos_ui_types.h
+++ b/EOSSDK.framework/Headers/eos_ui_types.h
@@ -2,7 +2,7 @@
 
 #pragma once
 
-#include "eos_common.h"
+#include <EOSSDK/eos_common.h>
 
 #pragma pack(push, 8)
 
@@ -127,7 +127,7 @@ EOS_DECLARE_CALLBACK(EOS_UI_OnDisplaySettingsUpdatedCallback, const EOS_UI_OnDis
 #define EOS_UI_KEY_ENTRY(Prefix, Name) Prefix ## Name,
 #define EOS_UI_KEY_CONSTANT_LAST(Prefix, Name) Prefix ## Name 
 EOS_ENUM_START(EOS_UI_EKeyCombination)
-#include "eos_ui_keys.h"
+#include <EOSSDK/eos_ui_keys.h>
 EOS_ENUM_END(EOS_UI_EKeyCombination);
 #undef EOS_UI_KEY_CONSTANT
 #undef EOS_UI_KEY_MODIFIER
diff --git a/EOSSDK.framework/Headers/eos_userinfo.h b/EOSSDK.framework/Headers/eos_userinfo.h
index 56f4597..af1deb1 100644
--- a/EOSSDK.framework/Headers/eos_userinfo.h
+++ b/EOSSDK.framework/Headers/eos_userinfo.h
@@ -1,7 +1,7 @@
 // Copyright Epic Games, Inc. All Rights Reserved.
 #pragma once
 
-#include "eos_userinfo_types.h"
+#include <EOSSDK/eos_userinfo_types.h>
 
 /**
  * The UserInfo Interface is used to receive user information for Epic Online Services Account IDs from the backend services and to retrieve that information once it is cached.
diff --git a/EOSSDK.framework/Headers/eos_userinfo_types.h b/EOSSDK.framework/Headers/eos_userinfo_types.h
index 66885c9..35ddca1 100644
--- a/EOSSDK.framework/Headers/eos_userinfo_types.h
+++ b/EOSSDK.framework/Headers/eos_userinfo_types.h
@@ -1,7 +1,7 @@
 // Copyright Epic Games, Inc. All Rights Reserved.
 #pragma once
 
-#include "eos_common.h"
+#include <EOSSDK/eos_common.h>
 
 #pragma pack(push, 8)
 
diff --git a/EOSSDK.framework/Headers/eos_version.h b/EOSSDK.framework/Headers/eos_version.h
index 3265967..05f52f8 100644
--- a/EOSSDK.framework/Headers/eos_version.h
+++ b/EOSSDK.framework/Headers/eos_version.h
@@ -33,7 +33,7 @@
 
 #ifndef RC_INVOKED
 
-#include "eos_base.h"
+#include <EOSSDK/eos_base.h>
 
 /** Get the version of the EOSSDK binary */
 EOS_DECLARE_FUNC(const char*) EOS_GetVersion(void);
diff --git a/EOSSDK.framework/Modules/module.modulemap b/EOSSDK.framework/Modules/module.modulemap
new file mode 100644
index 0000000..b2027d8
--- /dev/null
+++ b/EOSSDK.framework/Modules/module.modulemap
@@ -0,0 +1,8 @@
+
+    framework module EOSSDK [extern_c] {
+        requires c11
+        umbrella header "eos_all_ios.h"
+        textual header "eos_result.h"
+        textual header "eos_ui_keys.h"
+        export *
+    }
\ No newline at end of file
